<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="io.sqp.schemamatcher.typematchers.ArrayTypeMatcherTest" tests="20" skipped="0" failures="0" errors="0" timestamp="2015-09-23T16:39:09" hostname="ub-stefan" time="0.026">
  <properties/>
  <testcase name="CompatibilityWithIntNumberAdditionalSchema[0]({&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;integer&quot;}})" classname="io.sqp.schemamatcher.typematchers.ArrayTypeMatcherTest" time="0.002"/>
  <testcase name="CompatibilityWithIntNumberAdditionalSchema[1]({&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:[{&quot;type&quot;:&quot;integer&quot;},{&quot;type&quot;:&quot;number&quot;},{&quot;type&quot;:&quot;integer&quot;}]})" classname="io.sqp.schemamatcher.typematchers.ArrayTypeMatcherTest" time="0.0"/>
  <testcase name="CompatibilityWithIntNumberAdditionalSchema[2]({&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:[{&quot;type&quot;:&quot;integer&quot;},{&quot;type&quot;:&quot;number&quot;}]})" classname="io.sqp.schemamatcher.typematchers.ArrayTypeMatcherTest" time="0.002"/>
  <testcase name="CompatibilityWithIntNumberAdditionalSchema[3]({&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:[{&quot;type&quot;:&quot;integer&quot;},{&quot;type&quot;:&quot;number&quot;},{&quot;type&quot;:&quot;integer&quot;},{&quot;type&quot;:&quot;string&quot;}]})" classname="io.sqp.schemamatcher.typematchers.ArrayTypeMatcherTest" time="0.0"/>
  <testcase name="CompatibilityWithIntNumberAdditionalSchema[4]({&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:[{&quot;type&quot;:&quot;integer&quot;},{&quot;type&quot;:&quot;integer&quot;}],&quot;additionalItems&quot;:true})" classname="io.sqp.schemamatcher.typematchers.ArrayTypeMatcherTest" time="0.001"/>
  <testcase name="CompatibilityWithIntNumberAdditionalSchema[5]({&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:[{&quot;type&quot;:&quot;integer&quot;},{&quot;type&quot;:&quot;number&quot;}],&quot;additionalItems&quot;:{&quot;type&quot;:&quot;integer&quot;}})" classname="io.sqp.schemamatcher.typematchers.ArrayTypeMatcherTest" time="0.001"/>
  <testcase name="int3ArraySchemaCompatibility[0]({&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;integer&quot;}})" classname="io.sqp.schemamatcher.typematchers.ArrayTypeMatcherTest" time="0.004"/>
  <testcase name="int3ArraySchemaCompatibility[1]({&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:[{&quot;type&quot;:&quot;integer&quot;},{&quot;type&quot;:&quot;number&quot;},{&quot;type&quot;:&quot;integer&quot;}]})" classname="io.sqp.schemamatcher.typematchers.ArrayTypeMatcherTest" time="0.002"/>
  <testcase name="int3ArraySchemaCompatibility[2]({&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:[{&quot;type&quot;:&quot;integer&quot;},{&quot;type&quot;:&quot;number&quot;}]})" classname="io.sqp.schemamatcher.typematchers.ArrayTypeMatcherTest" time="0.002"/>
  <testcase name="int3ArraySchemaCompatibility[3]({&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:[{&quot;type&quot;:&quot;integer&quot;},{&quot;type&quot;:&quot;number&quot;},{&quot;type&quot;:&quot;integer&quot;},{&quot;type&quot;:&quot;string&quot;}]})" classname="io.sqp.schemamatcher.typematchers.ArrayTypeMatcherTest" time="0.001"/>
  <testcase name="int3ArraySchemaCompatibility[4]({&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:[{&quot;type&quot;:&quot;integer&quot;},{&quot;type&quot;:&quot;integer&quot;}],&quot;additionalItems&quot;:true})" classname="io.sqp.schemamatcher.typematchers.ArrayTypeMatcherTest" time="0.001"/>
  <testcase name="int3ArraySchemaCompatibility[5]({&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:[{&quot;type&quot;:&quot;integer&quot;},{&quot;type&quot;:&quot;number&quot;}],&quot;additionalItems&quot;:{&quot;type&quot;:&quot;integer&quot;}})" classname="io.sqp.schemamatcher.typematchers.ArrayTypeMatcherTest" time="0.001"/>
  <testcase name="int3SchemaCompatibility[0]({&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;integer&quot;}})" classname="io.sqp.schemamatcher.typematchers.ArrayTypeMatcherTest" time="0.0"/>
  <testcase name="int3SchemaCompatibility[1]({&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:[{&quot;type&quot;:&quot;integer&quot;},{&quot;type&quot;:&quot;number&quot;},{&quot;type&quot;:&quot;integer&quot;}]})" classname="io.sqp.schemamatcher.typematchers.ArrayTypeMatcherTest" time="0.001"/>
  <testcase name="int3SchemaCompatibility[2]({&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:[{&quot;type&quot;:&quot;integer&quot;},{&quot;type&quot;:&quot;number&quot;}]})" classname="io.sqp.schemamatcher.typematchers.ArrayTypeMatcherTest" time="0.0"/>
  <testcase name="int3SchemaCompatibility[3]({&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:[{&quot;type&quot;:&quot;integer&quot;},{&quot;type&quot;:&quot;number&quot;},{&quot;type&quot;:&quot;integer&quot;},{&quot;type&quot;:&quot;string&quot;}]})" classname="io.sqp.schemamatcher.typematchers.ArrayTypeMatcherTest" time="0.001"/>
  <testcase name="int3SchemaCompatibility[4]({&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:[{&quot;type&quot;:&quot;integer&quot;},{&quot;type&quot;:&quot;integer&quot;}],&quot;additionalItems&quot;:true})" classname="io.sqp.schemamatcher.typematchers.ArrayTypeMatcherTest" time="0.0"/>
  <testcase name="int3SchemaCompatibility[5]({&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:[{&quot;type&quot;:&quot;integer&quot;},{&quot;type&quot;:&quot;number&quot;}],&quot;additionalItems&quot;:{&quot;type&quot;:&quot;integer&quot;}})" classname="io.sqp.schemamatcher.typematchers.ArrayTypeMatcherTest" time="0.0"/>
  <testcase name="int3StringNotCompatibleWithIntSchemaArray" classname="io.sqp.schemamatcher.typematchers.ArrayTypeMatcherTest" time="0.0"/>
  <testcase name="int3additionalIntsArrayNotCompatibleWithInt3String" classname="io.sqp.schemamatcher.typematchers.ArrayTypeMatcherTest" time="0.0"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
